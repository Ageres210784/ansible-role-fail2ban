---
# tasks file for fail2ban

- name: Import assert.yml
  ansible.builtin.import_tasks:
    file: assert.yml
  run_once: true
  delegate_to: localhost

- name: Install fail2ban
  ansible.builtin.package:
    name: "{{ fail2ban_packages }}"
    state: present

- name: Find default jails
  ansible.builtin.find:
    paths: /etc/fail2ban/jail.d
    file_type: any
  register: default_jails

- name: Clear default jails
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ default_jails.files }}"
  notify:
    - Restart fail2ban

- name: Create filters in filter.d
  ansible.builtin.copy:
    content: |
      [Definition]
      {% for k, v in item.value.items() %}
      {{ k }} = {{ v }}
      {% endfor %}
    dest: /etc/fail2ban/filter.d/{{ item.key }}.conf
    owner: root
    group: root
    mode: "0644"
  loop: "{{ fail2ban_filterd_configs | dict2items }}"
  when:
    - fail2ban_filterd_configs is defined
  notify:
    - Restart fail2ban

- name: Configure fail2ban.local
  community.general.ini_file:
    path: /etc/fail2ban/fail2ban.local
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: "0644"
  loop: "{{ fail2ban_base_configuration + fail2ban_configuration }}"
  notify:
    - Restart fail2ban
  loop_control:
    label: "{{ item.option }}"

- name: Configure jail.local
  community.general.ini_file:
    path: /etc/fail2ban/jail.local
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: "0644"
  loop: "{{ fail2ban_base_jail_configuration + fail2ban_jail_configuration }}"
  notify:
    - Restart fail2ban
  loop_control:
    label: "{{ item.option }}"

- name: Stat auth log file
  ansible.builtin.stat:
    path: /var/log/auth.log
  register: fail2ban_auth

- name: Touch auth log file
  ansible.builtin.file:
    path: /var/log/auth.log
    state: touch
    mode: "0644"
  when:
    - fail2ban_auth.stat.exists is defined
    - not fail2ban_auth.stat.exists

- name: Start and enable fail2ban
  ansible.builtin.service:
    name: "{{ fail2ban_service }}"
    state: started
    enabled: true
